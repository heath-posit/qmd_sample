---
title: "Hello World with R and Python"
author: "Your Name"
date: today
format: html
execute:
  echo: true
  warning: false
jupyter: python3
---

## Introduction

This document demonstrates how to use both R and Python in the same Quarto document. We'll create simple "Hello World" examples and generate visualizations using both languages.

## R Section

### Hello World in R

```{r}
# Hello World in R
message("Hello World from R!")

# Basic R operations
x <- 1:10
y <- x^2
print(paste("We have", length(x), "data points"))
```

### R Visualization

Let's create a simple scatter plot using R's built-in plotting capabilities:

```{r}
#| label: fig-r-plot
#| fig-cap: "Quadratic relationship plotted with R"

# Create a scatter plot
plot(x, y, 
     main = "Quadratic Relationship (R)",
     xlab = "X values", 
     ylab = "Y values (XÂ²)",
     pch = 16,
     col = "blue",
     cex = 1.2)

# Add a line
lines(x, y, col = "red", lwd = 2)
```

## Python Section

### Hello World in Python

```{python}
# Hello World in Python
print("Hello World from Python!")

# Basic Python operations
import numpy as np
import matplotlib.pyplot as plt

x_py = np.linspace(0, 10, 50)
y_py = np.sin(x_py)
print(f"We have {len(x_py)} data points")
```

### Python Visualization

Now let's create a sine wave plot using matplotlib:

```{python}
#| label: fig-python-plot
#| fig-cap: "Sine wave plotted with Python"

# Create the plot
plt.figure(figsize=(10, 6))
plt.plot(x_py, y_py, 'g-', linewidth=2, label='sin(x)')
plt.fill_between(x_py, y_py, alpha=0.3, color='green')
plt.title('Sine Wave (Python)', fontsize=16)
plt.xlabel('X values', fontsize=12)
plt.ylabel('sin(X)', fontsize=12)
plt.grid(True, alpha=0.3)
plt.legend()
plt.show()
```

## Summary

This document demonstrated:

- Basic "Hello World" examples in both R and Python
- Creating visualizations with R's base plotting system
- Creating visualizations with Python's matplotlib

Quarto makes it easy to combine multiple programming languages in a single document, making it perfect for data science workflows that leverage the strengths of different tools.
